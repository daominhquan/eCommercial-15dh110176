@using eCommercial;
@using Microsoft.AspNet.Identity;
@{
    DefaultConnectionEntities db = new DefaultConnectionEntities();
    string useridd = Request.IsAuthenticated ? User.Identity.GetUserId() : null;
}

    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/toastr.js"></script>
    <link rel="stylesheet" href="~/Content/toastr.css">
    <link rel="stylesheet" href="~/Content/toastr.min.css">
    <script src="~/Scripts/owl.carousel.js"></script>
    <link href="~/Content/owl.carousel.css" rel="stylesheet" />

    <!--SignalR script to update the chat page and send messages.-->
    <script>
        
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var like = $.connection.eCommercialHubs;
            // Create a function that the hub can call back to display messages.
            like.client.ChangeLikeButton = function (countSavedProduct, toast, idproduct,isSave) {
                // Add the message to the page.
                // Set initial focus to message input box.
                $('#countsavedproduct').html(countSavedProduct);
                $('#countsavedproduct_badge').html(countSavedProduct);
                toastr.options = {
                    "positionClass": "toast-bottom-right",
                    "preventDuplicates": true,
                    "preventOpenDuplicates": true };
                isSave ? toastr.success(toast, 'Saved :)') : toastr.warning(toast, 'Unsaved :(');
                //toastr.success(toast, 'Congratulation');
            };



            // Start the connection.
            $.connection.hub.start().done(function () {
                $(".buttonsaveproduct").on('click', function (event) {
                    //alert("Hello! I am an alert box!!");
                    // Call the Send method on the hub.
                    like.server.like($(this).val(), '@User.Identity.GetUserId()');
                    // Clear text box and reset focus for next comment.
                    //$('#comment').val('').focus();
                    if ($(this).hasClass('w3-white')) {
                        //if this product dont have in saved list
                        $(this).addClass('w3-green').removeClass('w3-white');
                        $(this).html('<i class="fa fa-heart w3-text-white"></i>');
                    }
                    else {
                        $(this).addClass('w3-white').removeClass('w3-green');
                        $(this).html('<i class="fa fa-heart w3-text-gray"></i>');
                        $('#countsavedproduct').html('@db.Product_Like.Where(r => r.ID_Customer == useridd).Count()');
                    }

                });
            });
            $(".pageButton").on('click', function (event) {
                $(".pageButton").removeClass('w3-green');
                $(this).addClass('w3-green');
                $(".pageclass").css("display", "none");
                $("#page" + this.value).css("display", "block");

            });
                
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        $('#comment').keyup(function (e) {
            if (e.keyCode == 13) {
                $('#btncomment').click();
            }
        });
        $('.owl-carousel').owlCarousel({
            loop: true,
            margin: 10,
            nav: true,
            responsive: {
                0: {
                    items: 1
                },
                600: {
                    items: 3
                },
                1000: {
                    items: 5
                }
            }
        })
    </script>

